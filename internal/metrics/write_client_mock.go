// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-flotta/flotta-device-worker/internal/metrics (interfaces: WriteClient)

// Package metrics is a generated GoMock package.
package metrics

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWriteClient is a mock of WriteClient interface.
type MockWriteClient struct {
	ctrl     *gomock.Controller
	recorder *MockWriteClientMockRecorder
}

// MockWriteClientMockRecorder is the mock recorder for MockWriteClient.
type MockWriteClientMockRecorder struct {
	mock *MockWriteClient
}

// NewMockWriteClient creates a new mock instance.
func NewMockWriteClient(ctrl *gomock.Controller) *MockWriteClient {
	mock := &MockWriteClient{ctrl: ctrl}
	mock.recorder = &MockWriteClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWriteClient) EXPECT() *MockWriteClientMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MockWriteClient) Write(arg0 context.Context, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
func (mr *MockWriteClientMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockWriteClient)(nil).Write), arg0, arg1)
}
